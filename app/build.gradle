apply plugin: 'com.android.application'

def libs = rootProject.ext.libraries

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.chiachen.moviecollections"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        buildTypes.each {
            it.buildConfigField 'String', 'MOVIE_API_KEY', MOVIE_API_KEY
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            //获取当前循环到的依赖库
            def requested = details.requested
            //如果这个依赖库群组的名字是com.android.support
            if (requested.group == 'com.android.support') {
                //且其名字不是以multidex开头的
                if (!requested.name.startsWith("multidex")) {
                    //这里指定需要统一的依赖版本
                    details.useVersion '26.1.0'
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:${libs.supportVersion}"
    compile "com.android.support:recyclerview-v7:${libs.supportVersion}"
    compile "com.android.support:cardview-v7:${libs.supportVersion}"
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //Network
    compile "io.reactivex.rxjava2:rxandroid:${libs.rxandroid}"
    compile "io.reactivex.rxjava2:rxjava:${libs.rxjava}"
    compile "com.squareup.retrofit2:retrofit:${libs.retrofit}"
    compile "com.squareup.retrofit2:converter-gson:${libs.retrofit}"
    compile "com.squareup.retrofit2:adapter-rxjava2:${libs.retrofit}"
    compile "com.google.code.gson:gson:${libs.gson}"

    compile "com.facebook.stetho:stetho:${libs.stetho}"
    compile "com.facebook.stetho:stetho-okhttp3:${libs.stetho_okhttp3}"

    debugCompile "com.readystatesoftware.chuck:library:${libs.chuck}"
    releaseCompile "com.readystatesoftware.chuck:library-no-op:${libs.chuck}"

    compile("com.github.ihsanbal:LoggingInterceptor:${libs.logginInterceptor}") {
        exclude group: 'org.json', module: 'json'
    }

    compile "com.google.dagger:dagger:${libs.dagger}"// dagger2
    compile "com.google.dagger:dagger-android-support:${libs.dagger}"// dagger-android
    annotationProcessor "com.google.dagger:dagger-compiler:${libs.dagger}" // dagger2
    annotationProcessor "com.google.dagger:dagger-android-processor:${libs.dagger}"
    // dagger-android
    compile "com.github.bumptech.glide:glide:${libs.glide}"

    // Room DB
    implementation "android.arch.persistence.room:runtime:${libs.room}"
    annotationProcessor "android.arch.persistence.room:compiler:${libs.room}"

    implementation 'org.glassfish:javax.annotation:10.0-b28'
}
